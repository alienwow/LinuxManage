upstream demo_com{
    ip_hash;
    server 172.11.80.16:18001;
}

server {
    server_name  demo.com;
    listen       443 ssl;

    ssl_certificate     cert/demo.com.pem;
    ssl_certificate_key cert/demo.com.key;
    ssl_session_timeout 5m;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    ssl_prefer_server_ciphers on;

    access_log /nginx/logs/demo.com.log  main;

    location / {

###############解决  跨域请求问题###################

        set $flag -1;
        if ($request_method = 'OPTIONS') {
            set $flag 200;
        }
        if ($request_method = 'POST') {
            set $flag 1;
        }
        if ($request_method = 'GET') {
            set $flag 1;
        }
        if ($request_method = 'DELETE') {
            set $flag 1;
        }
        if ($request_method = 'PUT') {
            set $flag 1;
        }
        # add_header Access-Control-Allow-Origin * always;
        # add_header Access-Control-Allow-Origin 'https://demo.com' always;
        # always: 解决 4XX http code 下 nginx add_header 不添加请求头的问题
        #   http://nginx.org/en/docs/http/ngx_http_headers_module.html
        add_header Access-Control-Allow-Origin '$http_origin' always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, DELETE, PUT' always;
        add_header Access-Control-Allow-Headers * always;
        # 前端获取特殊请求头的时候需要设置 如 Date
        add_header Access-Control-Expose-Headers '*, Authorization' always;
        if ($flag = 200) {
            return 200;
        }

###############解决  跨域请求问题###################

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass  http://demo_com/;

############### websocket 配置开始 ###################
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
############### websocket 配置结束 ###################
    }
}

server {
    server_name  demo.com;
    listen       80;

    rewrite ^(.*)$ https://${server_name}$1 permanent; 
}
